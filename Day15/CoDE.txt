package SMS;

public class Student {
    // Private attributes to ensure encapsulation
    private int id;
    private String name;
    private int age;
    private String course;

    //Constructor
    public Student(int id, String name, int age, String course){
        this.id=id;
        this.name=name;
        this.age=age;
        this.course=course;
    }

    //Getters and Setters

    public int getId() {
        return id;
    }

    public void setId(int id) {
        this.id = id;
    }

    public String getName(){
        return name;
    }

    public void setName(String name) {
        this.name = name;
    }

    public int getAge() {
        return age;
    }

    public void setAge(int age) {
        this.age = age;
    }

    public String getCourse(){
        return course;
    }

    public void setCourse(String course) {
        this.course = course;
    }

    //Override toString()

    @Override
    public String toString() {
        return "Student ID: "+id + ", Name :"+ name + ", Age : "+ age + ", Course :"+ course;
    }
}
==============================================================================================
package SMS;

public interface StudentOperations {
    void addStudent(Student student); //Add new student
    Student getStudent(int id);
    void updateStudent(int id, Student updatedStudent);
    void deleteStudent(int id);
    void displayAllStudents();
}
==============================================================================================
package SMS;

import java.util.HashMap;

public class StudentOperationsImpl implements StudentOperations {
    //using a HashMap to store Student objects with their IDs
    private HashMap<Integer,Student> studentMap = new HashMap<>();

    @Override
    public void addStudent(Student student){
        // To add student to the map
        studentMap.put(student.getId(),student);
        System.out.println("Student Added Successfully");
    }

    @Override
    public Student getStudent(int id){
        return studentMap.get(id);
    }

    @Override
    public void updateStudent(int id, Student updatedStudent){
        //Check if the student exists im HashMAp
        if(studentMap.containsKey(id)){
            studentMap.put(id,updatedStudent);
            System.out.println("Student Updated Successfully");
        } else {
            System.out.println("Student Does Not Exist with id : " + id);
        }
    }

    @Override
    public void deleteStudent(int id){
        //Remove the student from map
        if(studentMap.remove(id) != null){
            System.out.println("Student Deleted Successfully");
        } else {
            System.out.println("Student not found ");
        }
    }

    @Override
    public void displayAllStudents(){
        if(studentMap.isEmpty()){
            System.out.println("No Students to display");
        } else {
            for(Student student : studentMap.values()){
                System.out.println(student);
            }
        }
    }
}
==============================================================================================
package SMS;

import java.util.Scanner;

public class StudentManagementSystem {
    public static void main(String[] args) {
        StudentOperations operations= new StudentOperationsImpl();
        Scanner scanner= new Scanner(System.in);
        int choice;

        do{
            System.out.println("\n SMS");
            System.out.println("1. Add Student");
            System.out.println("2. Get Student by ID");
            System.out.println("3. Update Student");
            System.out.println("4. Delete Student");
            System.out.println("5. Display All Students");
            System.out.println("6. Exit");
            System.out.println("Enter Your Choice :");
            choice = scanner.nextInt();

            switch (choice){
                case 1:
                    System.out.println("Enter ID :");
                    int id  = scanner.nextInt();
                    scanner.nextLine(); //Consume newLine
                    System.out.println("Enter Your Name : ");
                    String name = scanner.nextLine();
                    System.out.println("Enter Your Age :");
                    int age = scanner.nextInt();
                    scanner.nextLine(); //Consume newLine
                    System.out.println("Enter Course: ");
                    String course = scanner.nextLine();
                    operations.addStudent(new Student(id,name,age, course));
                    break;


                case 2:
                    //Get student by ID
                    System.out.println("Enter Student ID to  Student :");
                    id = scanner.nextInt();
                    Student student= operations.getStudent(id);
                    if(student != null){
                        System.out.println(student);
                    }else{
                        System.out.println("Student Not found");
                    }
                    break;

                case 3:
                    System.out.println("Enter Student ID to Update :");
                    id = scanner.nextInt();
                    scanner.nextLine();
                    System.out.println("Enter New NAme :");
                    name = scanner.nextLine();
                    System.out.println("Enter New Age :");
                    age = scanner.nextInt();
                    scanner.nextLine();
                    System.out.println("Enter New Course :");
                    course = scanner.nextLine();
                    operations.updateStudent(id,new Student(id,name,age,course));
                    break;

                case 4:
                    System.out.println("Enter ID to delete :");
                    id = scanner.nextInt();
                    operations.deleteStudent(id);
                    break;

                case 5:
                    operations.displayAllStudents();
                    break;

                case 6:
                    System.out.println("GoodBye!");
                    break;

                default:
                    System.out.println("Invalid Choice !!");

            }
        }while(choice != 6);
        scanner.close();





    }
}

